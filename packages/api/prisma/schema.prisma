// generator client {
//   provider = "prisma-client-js"
// }

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Monitor {
  id              String          @id @default(cuid())
  createdAt       DateTime        @default(now())
  // updatedAt       DateTime        @default(now()) @updatedAt
  name            String          @unique
  status          String          @default("active")
  url             String
  method          String          @default("GET") // GET/POST/HEAD/PUT/DELETE
  frequency       Int
  // text/plain, application/json, text/xml, text/html, application/x-www-form-urlencoded or none
  bodyType        String?         @default("")
  body            String?
  headers         Json            @default("[]")
  queryParams     Json            @default("[]")
  cookies         String?
  followRedirects Int?            @default(0)
  timeout         Int?            @default(30) //30 seconds
  locations       String[]
  monitorResults  MonitorResult[]
  assertions      Json            @default("[]") // custom syntax
  notifyEmail     String?
  env             Json            @default("[]") // custom syntax
}

model MonitorResult {
  id             String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt      DateTime @default(now())
  err            String
  headers        Json     @default("[]")
  url            String
  ip             String
  body           String
  bodyJson       Json?
  bodySize       Int
  code           Int
  codeStatus     String
  protocol       String
  waitTime       Int
  dnsTime        Int
  tcpTime        Int
  tlsTime        Int
  uploadTime     Int
  ttfb           Int
  downloadTime   Int
  totalTime      Int
  certExpiryDays Int
  certCommonName String
  assertResults  Json     @default("[]")

  monitor   Monitor @relation(fields: [monitorId], references: [id], onDelete: Cascade)
  monitorId String // relation scalar field  (used in the `@relation` attribute above)
}
