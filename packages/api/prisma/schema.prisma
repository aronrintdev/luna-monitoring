generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Monitor {
  id              String          @id @default(cuid())
  createdAt       DateTime        @default(now())
  // updatedAt       DateTime        @default(now()) @updatedAt
  name            String          @unique
  status          String          @default("active")
  url             String
  method          String          @default("GET") // GET/POST/HEAD/PUT/DELETE
  frequency       Int
  // text/plain, application/json, text/xml, text/html, application/x-www-form-urlencoded or none
  bodyType        String?         @default("")
  body            String?
  headers         Json            @default("[]")
  queryParams     Json            @default("[]")
  cookies         String?
  followRedirects Int?            @default(0)
  timeout         Int?            @default(30) //30 seconds
  locations       String?         @default("") // Comma separated list of locations
  monitorResults  MonitorResult[]
  assertions      Json            @default("[]") // custom syntax
  notifyEmail     String?
  env             Json            @default("[]") // custom syntax
}

model MonitorResult {
  id               String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  createdAt        DateTime @default(now())
  err              String
  headers          Json     @default("[]")
  body             String
  bodyJson         Json?
  bodySize         Int
  code             Int
  codeStatus       String
  protocol         String
  dnsLookupTime    Int
  tcpConnectTime   Int
  tlsHandshakeTime Int
  timeToFirstByte  Int
  totalTime        Int
  certExpiryDays   Int
  certCommonName   String
  assertResults    Json?

  monitor   Monitor @relation(fields: [monitorId], references: [id])
  monitorId String // relation scalar field  (used in the `@relation` attribute above)
}
